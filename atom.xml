<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dnweapon blog</title>
  
  <subtitle>Life is short, why not have a try</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://amoyit.top/"/>
  <updated>2018-12-12T02:58:16.219Z</updated>
  <id>http://amoyit.top/</id>
  
  <author>
    <name>dnweapon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MacOSX完全卸载JDK</title>
    <link href="http://amoyit.top/dnweapon/c39e8b26/"/>
    <id>http://amoyit.top/dnweapon/c39e8b26/</id>
    <published>2018-12-12T02:58:16.219Z</published>
    <updated>2018-12-12T02:58:16.219Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -fr /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefpane</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls /Library/Java/JavaVirtualMachines/ </span><br><span class="line">输出：jdk-9.0.1.jdk</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
      <category term="Config" scheme="http://amoyit.top/categories/Config/"/>
    
    
      <category term="MacOSX" scheme="http://amoyit.top/tags/MacOSX/"/>
    
  </entry>
  
  <entry>
    <title>IE8兼容问题</title>
    <link href="http://amoyit.top/dnweapon/f0f4849e/"/>
    <id>http://amoyit.top/dnweapon/f0f4849e/</id>
    <published>2018-12-12T02:57:43.530Z</published>
    <updated>2018-12-12T02:57:43.530Z</updated>
    
    <content type="html"><![CDATA[<h2 id="js时间函数显示NaN解决方案"><a href="#js时间函数显示NaN解决方案" class="headerlink" title="js时间函数显示NaN解决方案"></a>js时间函数显示NaN解决方案</h2><h3 id="出现问题-new-Date-时间字符串-得到的数据是NaN。"><a href="#出现问题-new-Date-时间字符串-得到的数据是NaN。" class="headerlink" title="出现问题: new Date(时间字符串)得到的数据是NaN。"></a>出现问题: new Date(时间字符串)得到的数据是NaN。</h3><h3 id="解决方案-调用如下函数来获取时间。调用方式parseISO8601-时间字符串-返回的是日期对象。"><a href="#解决方案-调用如下函数来获取时间。调用方式parseISO8601-时间字符串-返回的是日期对象。" class="headerlink" title="解决方案: 调用如下函数来获取时间。调用方式parseISO8601(时间字符串)返回的是日期对象。"></a>解决方案: 调用如下函数来获取时间。调用方式parseISO8601(时间字符串)返回的是日期对象。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function parseISO8601(dateStringInRange) &#123;</span><br><span class="line">    var isoExp = /^\s*(\d&#123;4&#125;)-(\d\d)-(\d\d)\s*$/,</span><br><span class="line">    date = new Date(NaN), </span><br><span class="line">    month,</span><br><span class="line">    parts = isoExp.exec(dateStringInRange);</span><br><span class="line">    </span><br><span class="line">    if(parts) &#123;</span><br><span class="line">      month = +parts[2];</span><br><span class="line">      date.setFullYear(parts[1], month - 1, parts[3]);</span><br><span class="line">      if(month != date.getMonth() + 1) &#123;</span><br><span class="line">        date.setTime(NaN);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="IE低版本兼容"><a href="#IE低版本兼容" class="headerlink" title="IE低版本兼容"></a>IE低版本兼容</h2><h3 id="解决方案：在head标签内CSS加载之前加上如下语句可以解决IE8兼容模式的问题-意为强制IE浏览器使用最新的版本来渲染页面"><a href="#解决方案：在head标签内CSS加载之前加上如下语句可以解决IE8兼容模式的问题-意为强制IE浏览器使用最新的版本来渲染页面" class="headerlink" title="解决方案：在head标签内CSS加载之前加上如下语句可以解决IE8兼容模式的问题,意为强制IE浏览器使用最新的版本来渲染页面"></a>解决方案：在head标签内CSS加载之前加上如下语句可以解决IE8兼容模式的问题,意为强制IE浏览器使用最新的版本来渲染页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="IE8下placeholder不显示"><a href="#IE8下placeholder不显示" class="headerlink" title="IE8下placeholder不显示"></a>IE8下placeholder不显示</h2><h3 id="解决方案-遍历placeholder，引用如下代码可解决"><a href="#解决方案-遍历placeholder，引用如下代码可解决" class="headerlink" title="解决方案: 遍历placeholder，引用如下代码可解决"></a>解决方案: 遍历placeholder，引用如下代码可解决</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$(document).ready(function() &#123;</span><br><span class="line">    if ($(&quot;.inputd input&quot;).val() != &quot;&quot;) &#123;</span><br><span class="line">        $(this).next(&quot;.input_placeholder&quot;).hide();</span><br><span class="line">    &#125;;</span><br><span class="line">    $(&quot;.inputd .input_placeholder&quot;).click(function() &#123;</span><br><span class="line">    $(this).prev().focus();</span><br><span class="line">    &#125;);</span><br><span class="line">    $(&quot;.inputd input&quot;).focusin(function() &#123;</span><br><span class="line">        $(this).next(&quot;.input_placeholder&quot;).hide();</span><br><span class="line">    &#125;);</span><br><span class="line">    $(&quot;.inputd input&quot;).focusout(function() &#123;</span><br><span class="line">        if ($(this).val() == &quot;&quot;) &#123;</span><br><span class="line">            $(this).next(&quot;.input_placeholder&quot;).show();</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;js时间函数显示NaN解决方案&quot;&gt;&lt;a href=&quot;#js时间函数显示NaN解决方案&quot; class=&quot;headerlink&quot; title=&quot;js时间函数显示NaN解决方案&quot;&gt;&lt;/a&gt;js时间函数显示NaN解决方案&lt;/h2&gt;&lt;h3 id=&quot;出现问题-new-Date
      
    
    </summary>
    
      <category term="BUG" scheme="http://amoyit.top/categories/BUG/"/>
    
    
      <category term="IE8" scheme="http://amoyit.top/tags/IE8/"/>
    
  </entry>
  
  <entry>
    <title>Github Pages + Hexo 搭建博客</title>
    <link href="http://amoyit.top/dnweapon/fd0c693c/"/>
    <id>http://amoyit.top/dnweapon/fd0c693c/</id>
    <published>2018-09-28T02:49:20.112Z</published>
    <updated>2018-09-28T02:49:42.061Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Github-Pages-Hexo-搭建博客"><a href="#Github-Pages-Hexo-搭建博客" class="headerlink" title="Github Pages + Hexo 搭建博客"></a>Github Pages + Hexo 搭建博客</h1><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>这是一篇使用GitHub Pages和Hexo搭建免费独立博客的总结。</p><p>需掌握基础：</p><ul><li><a href="http://git-scm.com/book/zh/v2" target="_blank" rel="noopener">Git</a></li><li><a href="https://github.com/" target="_blank" rel="noopener">GitHub</a></li><li><a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a></li><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a></li><li><a href="http://www.appinn.com/markdown/#autoescape" target="_blank" rel="noopener">Markdown</a></li></ul><h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><h3 id="GitHub-Pages仓库配置"><a href="#GitHub-Pages仓库配置" class="headerlink" title="GitHub Pages仓库配置"></a>GitHub Pages仓库配置</h3><ol><li><strong>创建对应的仓库</strong></li></ol><p>在自己的GitHub账号下创建一个新的仓库，命名为username.github.io（username是你的账号名)。</p><p>在这里，要知道，GitHub Pages有两种类型：User/Organization Pages 和 Project Pages，而我所使用的是User Pages。</p><p>简单来说，User Pages 与 Project Pages的区别是：</p><ul><li>User Pages 是用来展示用户的，而 Project Pages 是用来展示项目的。</li><li>用于存放 User Pages 的仓库必须使用username.github.io的命名规则，而 Project Pages 则没有特殊的要求。</li><li>User Pages 将使用仓库的 master 分支，而 Project Pages 将使用 gh-pages 分支。</li><li>User Pages 通过 http(s)://username.github.io 进行访问，而 Projects Pages通过 http(s)://username.github.io/projectname 进行访问。</li></ul><ol start="2"><li><strong>相关资料</strong></li></ol><ul><li><a href="https://help.github.com/articles/user-organization-and-project-pages/" target="_blank" rel="noopener">GitHub Pages Basics / User, Organization, and Project Pages</a><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3></li></ul><ol><li><strong>安装Git</strong></li></ol><ul><li><a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git" target="_blank" rel="noopener">官方安装教程文档</a></li></ul><ol start="2"><li><strong>配置Git</strong></li></ol><p>当安装完Git应该做的第一件事情就是设置用户名称和邮件地址。这样做很重要，因为每一个Git的提交都会使用这些信息，并且它会写入你的每一次提交中，不可更改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;username&quot;</span><br><span class="line"></span><br><span class="line">$ git config --global user.email &quot;username@example.com&quot;</span><br></pre></td></tr></table></figure><p>对于user.email，因为在GitHub的commits信息上是可见的，所以如果你不想让人知道你的email，可以Keeping your email address private:</p><ul><li>在GitHub右上方点击你的头像，选择”Settings”；</li><li>在右边的”Personal settings”侧边栏选择”Emails”；</li><li>选择”Keep my email address private”。</li></ul><p>这样，你就可以使用如下格式的email进行配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email &quot;username@users.noreply.github.com&quot;</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>相关资料</strong></li></ol><ul><li><a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git" target="_blank" rel="noopener">安装Git</a></li><li><a href="http://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%88%9D%E6%AC%A1%E8%BF%90%E8%A1%8C-Git-%E5%89%8D%E7%9A%84%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener">配置Git</a></li><li><a href="https://help.github.com/articles/setting-your-email-in-git/" target="_blank" rel="noopener">Setting your email in Git</a></li><li><a href="https://help.github.com/articles/keeping-your-email-address-private/" target="_blank" rel="noopener">Keeping your email address private</a></li></ul><h3 id="Git和GitHub"><a href="#Git和GitHub" class="headerlink" title="Git和GitHub"></a>Git和GitHub</h3><ol><li><strong>git和github的区别</strong></li></ol><p>git是一个版本控制的工具，而github有点类似于远程仓库，用于存放用git管理的各种项目。</p><ol start="2"><li><strong>git与github建立连接</strong></li></ol><p>为了能够在本地使用git管理github上的项目，需要进行一些配置，这里介绍SSH的方法。</p><ul><li>检查电脑是否已经有SSH KEYS。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al ~/.ssh</span><br><span class="line"># Lists the files in your .ssh directory, if they exist</span><br></pre></td></tr></table></figure><p>默认情况下，public keys的文件名是以下的格式之一：id_dsa.pub、id_ecdsa.pub、id_ed25519.pub、id_rsa.pub。因此，如果列出的文件有public和private钥匙对（例如id_ras.pub和id_rsa），证明已存在SSH keys。</p><ul><li>如果没有SSH KEY，则生成新的SSH KEY。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br><span class="line"># Creates a new ssh key, using the provided email as a label</span><br></pre></td></tr></table></figure><p>之后一路回车即可。</p><ol start="3"><li><strong>向SSH-AGENT添加KEY</strong></li></ol><p>首先确保ssh-agent可运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># start the ssh-agent in the background</span><br><span class="line">$ ssh-agent -s</span><br></pre></td></tr></table></figure><p>然后添加SSH key：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>在GitHub添加SSH KEY</strong></li></ol><p>首先，拷贝key：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">clip &lt; ~/.ssh/id_rsa.pub</span><br><span class="line"># Copies the contents of the id_rsa.pub file to your cllipboard</span><br></pre></td></tr></table></figure><p>然后，在GitHub右上方点击头像，选择”Settings”，在右边的”Personal settings”侧边栏选择”SSH Keys”。接着粘贴key，点击”Add key”按钮。最后，测试链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line"># Attempts to ssh to GitHub</span><br></pre></td></tr></table></figure><p>如果你看到:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure><p>就键入：yes。之后将会看到如下信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hi username! You&apos;ve successfully authenticated, but GitHub does not</span><br><span class="line">provide shell access.</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>相关资料</strong></li></ol><ul><li><a href="https://help.github.com/articles/generating-ssh-keys/" target="_blank" rel="noopener">Generating SSH keys</a></li></ul><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><ol><li><strong>安装Hexo</strong></li></ol><p>安装Hexo相当简单。在安装之前，必须检查电脑中是否已经安装下列应用程序：</p><ul><li><a href="http://nodejs.org/" target="_blank" rel="noopener">NodeJs</a></li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>使用Hexo建站</strong></li></ol><p>安装完后，在你喜欢的文件夹内（例如D：\Hexo），点击鼠标右键选择Git bash，输入以下指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>该命令会在目标文件夹内建立网站所需要的所有文件。接下来是安装依赖包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>这样，我们就已经搭建起本地的Hexo博客了。可以先执行以下命令（在对应文件夹下），然后再浏览器输入localhost:4000查看。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>这个博客只是本地的，别人是浏览不了的，之后需要部署到GitHub上。</p><ol start="3"><li><strong>相关资料</strong></li></ol><ul><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官网文档</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Github-Pages-Hexo-搭建博客&quot;&gt;&lt;a href=&quot;#Github-Pages-Hexo-搭建博客&quot; class=&quot;headerlink&quot; title=&quot;Github Pages + Hexo 搭建博客&quot;&gt;&lt;/a&gt;Github Pages + Hex
      
    
    </summary>
    
      <category term="博客" scheme="http://amoyit.top/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="GitHub" scheme="http://amoyit.top/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://amoyit.top/tags/Hexo/"/>
    
  </entry>
  
</feed>
